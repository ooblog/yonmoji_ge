「yonmoji_ge」は「約四文字(yakuyon)」サイトジェネレータのPythonによる実装です。

 ０-0． ライセンス及びソフトの使用の補足ガイドライン
 ０-1． インストール＆アンインストール方法・その他セットアップ方法
 ０-2． その他現在わかっている不具合や今後の課題。
 １．   [yonmoji_ge.tsv]の設定(usernameとサイトの追加はこちら)。
 ２-0． 共通置換項目(<!!>)「<!pagename!>」「<!datename!>」「"<!username!>」。
 ２-1． [yakuyon.tsv]の「*siteconfig」編集方法と「約四文字」のサイト構成(入力項目の初期設定はこちら)。
 ２-2． [yakuyon.tsv]の「*rewritelist」サイト毎他置換項目(<??>)「<?title?>」など。
 ２-3． [yakuyon.tsv]の「!title」分岐「index」「[0-9]{4}-[0-9]{2}-[0-9]{2}」「.*」。
 ２-4． [yakuyon.tsv]の「@title_yonmoji」「@title_pagr-yonmoji」「@title_blog-yonmoji」「*rewritelist」分岐先結論。
 ３-0． 正規表現ＦＡＱ
 ３-1． ＦＡＱ(そもそも起動しないなどの疑問はこちら)
 ４．   作者について、例えば連絡先。

０-0． ライセンス及びソフトの使用の補足ガイドライン

 ※「MIT License」準拠。
   MIT License - Choose a License
   http://choosealicense.com/licenses/mit/

 ※「MIT License」の日本語訳。
   licenses/MIT_license - Open Source Group Japan Wiki - Open Source Group Japan - OSDN
   https://osdn.jp/projects/opensource/wiki/licenses%2FMIT_license

 ※日本語による補足。
   ・複製物にも「MIT License」の[LICENSE]ファイルを添付る事(著作権表示を誤魔化さない事)。
   ・いかなる場合においても作者または著作権所有者は一切責任を負わない事。
   ・ソースコードの閲覧やコピーに制限を設けない事。

 ※「yonmoji_ge」固有の問題への言及。
   ・ジェネレータで作成したサイトにまでMITライセンスは及ばないはず。
   ・初期設定のままだと「約四文字」のクローンが作られるだけなので、[yonmoji_ge.tsv]の「username」項目は書き描き直すこと。


０-1． インストール＆アンインストール方法・その他セットアップ方法

 インストール自体は任意のフォルダですが、初期設定では「../<!username!>.github.io/<!pagename!>.html」つまり「../ooblog.github.io/index.html」です。
 それらの設定は「GitHub Page」上にサイトを作る事を想定しています。

  Websites for you and your projects.
  https://pages.github.com/

 基本的にフォルダ「yonmoji_ge」を削除すればアンインストールですが、
 「<!username!>.github.io」はGitHubリポジトリのはずなので、HTMLファイルの削除するしないはサイト運営の方向性によると思います。


０-2． その他現在わかっている不具合や今後の課題。

 Python2.7.3(PuppyLinux571JP)およびPython3.4.3(Wine1.7.18)でジェネレータの動作を確認しています。Windows,cygwin,darwinなどでの動作は確認しておりません。
 Firefox45.0.1(Linux)およびOpera12.16(PuppyLinux571JP)でサイトの動作を確認しています。GoogleChromeやInternetExplorerなどでの動作は確認しておりません。
 アスキーアートが崩れる場合はGeanyで"MSゴシック 12"を使うと半角全角が揃うかもです。
 「約四文字」以外のサイトも作れるようにしておきたい。
 「onsubmit」も「addEventListener」で処理したいけどなんとなく動作しない(HTMLにまだJSが残ってる)。
 outputFEEDは未実装。[atom.xml]の作成方法が未定。
 outputHTMLだけでなくoutputCSS,outputJS,outputSEARCHも置換の対象にする予定。


１．   [yonmoji_ge.tsv]の設定(usernameとサイトの追加はこちら)。

 「yonmoji_ge」本体の設定は「username」などサイト共通のものを含みます。
 「username」の「ooblog」を書き換えないと「http://<!username!>.github.io/」が「http://ooblog.github.io/」になってしまいます。

  [yonmoji_ge|                           サイトジェネレータ「yonmoji_ge」の設定です。
   fontname                              フォント名。初期値は「kantray5x5comic」。
   fontsize                              フォントサイズ。初期値は「12」。
   username                              「<!username!>」項目で置換させるGitHubのusername。初期値は「ooblog」。
   pagetime                              「page(HTML)」ボタンを押して[*,html]などをセーブした時、時間を表示してボタン押下を確認させる用途。初期値は「@0h:@0n:@0s」。
   rewritetime                           「rewrite(TSV)」ボタンを押して[*.tsv]の「<??>」項目をセーブした時、時間を表示してボタン押下を確認させる用途。初期値は「@0h:@0n:@0s」。
  [sitelist|                             参考用に「http://ooblog.github.io/」のWebページの下書きを添付。
   yakuyon                               リポジトリ「ooblog.github.io」を[yakuyon.tsv]として管理。まだブログ部分制作途中。
   test                                  リポジトリ「test」[test.tsv]の予定。まだまだ制作途中。
   LTsv9kantray                          リポジトリ「LTsv9kantray」の予定。まだ未制作です。
   yonmoji_ge                            リポジトリ「yonmoji_ge」の予定。まだ未制作です。


２-0． 共通置換項目(<!!>)「<!pagename!>」「<!datename!>」「"<!username!>」。

 「yonmoji_ge」は新規[*.tsv]ファイルを作成するときベースとなるテキスト、
  例えば「baseHTML」を「<??>」項目や「<!!>」項目で[*.tsv]の内容に置換して[*.html]などを作成します。
 「<!!>」項目は「<??>」項目の中やファイル名指定で使うこともできます。

   <!pagename!>                          ページネーム。「index,html」とかの「index」。
   <!datename!>                          [yakuyon.tsv]等の「datename」。「@0h:@0n:@0s」が「YYYY:MM:DD」という感じで代入される。
   <!username!>                          [yonmoji_ge.tsv]の「username」。「<!username!>.github.io」という使い方を想定。


２-1． [yakuyon.tsv]の「*siteconfig」編集方法と「約四文字」のサイト構成(入力項目の初期設定はこちら)。

 架空の検索サイト「約四文字」を題材にサイト設計の説明をしていきます。

  「約四文字」(ooblog.github.io)
  http://ooblog.github.io/

  [*siteconfig|                          [*,html]の保存先などを指定。
   rewriteTSV                            初期値は「./yakuyon/<!pagename!>.tsv」。[yonmoji_ge.py]配下に子フォルダ[yakuyon]を作成してページ毎の[*.tsv]ファイルを保存。
   outputHTML                            初期値は「../<!username!>.github.io/<!pagename!>.html」。[*.html]ファイルの保存先。
   outputCSS                             初期値は「../<!username!>.github.io/yakuyon.css」。[*.css]ファイルの保存先。
   outputJS                              初期値は「../<!username!>.github.io/yakuyon.js」。[*.js]ファイルの保存先。
   outputSEARCH                          初期値は「../<!username!>.github.io/opensearch.xml」。
   outputFEED                            初期値は「../<!username!>.github.io/atom.xml」。フィードの保存先(未実装)。
   datename                              初期値は「@000y-@0m-@0dm」。ブログ用の日付ページ名の設定。「@000y-@0m-@0dm」で「YYYY-MM-DD.html」を作成する想定。
   feedmax                               初期値は「20」。降臨履歴のAtomフィードの件数の予定。


２-2． [yakuyon.tsv]の「*rewritelist」サイト毎他置換項目(<??>)「<?title?>」など。

 「<??>」項目は「*rewritelist」タグの中に用意します。「<??>」項目の中でも「<!!>」項目を使うことができます。
 「*rewritelist」は上から順番に実行するので「<??>」項目の中で「<??>」項目も使うことが可能です。
 項目の中身がタグ名の場合、条件分岐に移行する。タグ名が存在しない場合、項目の中身に置換する。

  [*rewritelist|                         「<??>」項目を置換する順番に上から並べる。
   <?title?>                             条件分岐「!title」タグの結論に置換。「２-3．」で解説。
   <?breadcrumbs?>                       条件分岐「!breadcrumbs」タグの結論に置換。
   <?tagline?>                           条件分岐「!tagline」タグの結論に置換。
   <?links?>                             条件分岐「!links」タグの結論に置換。
   <?sitename?>                          「http://<!username!>.github.io/」に置換する。「<!username!>」の部分は「username」の設定内容に置換。


２-3． [yakuyon.tsv]の「!title」分岐「index」「[0-9]{4}-[0-9]{2}-[0-9]{2}」「.*」。

 「<title>」編集をベースに分岐について説明。
 条件分岐も上から順番に実行して該当する条件の結論を置換文字列に使います。該当無しの場合「<??>」項目が消えるだけです(長さ0の文字列に置換)。

  [!title|                               項目名に正規表現、項目内容に結論内容のタグを記述。
   ^index$                               ページ名が「index」と一致する場合、結論「@title_yonmoji」タグ分岐。
   ^[0-9]{4}-[0-9]{2}-[0-9]{2}$          ページ名が「YYYY-MM-DD」形式の場合、結論「@title_blog-yonmoji」タグ分岐。
   .*                                    上記の条件から漏れた全ての文字列の場合、結論「@title_page-yonmoji」タグへ分岐。

２-4． [yakuyon.tsv]の「@title_yonmoji」「@title_pagr-yonmoji」「@title_blog-yonmoji」「*rewritelist」分岐先結論。

 「<??>」項目を結論の内容で置換します。「<??>」項目も「<!!>」項目も使うことができます。
 「<?title?>」はHTMLの「<title></title>」を記述する設定で話を進めます。

  [@title_yonmoji|                       ページ名が「index」と一致した場合の「<?title?>」置換内容を記述。
                                         [index,html]はトップページなのでサイト名のみの記述。
  [@title_blog-yonmoji|                  ページ名が「YYYY-MM-DD」形式の場合の「<?title?>」置換内容を記述。
                                         「YYYY-MM-DD.html」はブログの想定なので、ブログの旨を記述。
  [@title_page-yonmoji|                  「index」でも「YYYY-MM-DD」でもない場合の「<?title?>」置換内容を記述。
                                         「約四文字」の検索フォーム入力文字≒ページ名を表示。


３-0． 正規表現ＦＡＱ

 Ｑ．「^index$」の「^」とか「$」って何。
 Ａ．

 Ｑ．「^[0-9]{4}-[0-9]{2}-[0-9]{2}$」の「[0-9]」とか「{4}」って何。
 Ａ．

 Ｑ．「.*」って何。
 Ａ．

 Ｑ．正規表現についてもっと詳しく。
 Ａ．「yonmoji_ge」はPythonで作成されてるのでPythonのドキュメントにとりあえず目を通すべきです(正規表現には方言が存在するので注意)。

    正規表現 HOWTO — Python 3.3.6 ドキュメント
    http://docs.python.jp/3.3/howto/regex.html

    6.2. re — 正規表現操作 — Python 3.3.6 ドキュメント
    http://docs.python.jp/3.3/library/re.html


３-1． ＦＡＱ(そもそも起動しないなどの疑問はこちら)

 Ｑ．[yonmoji_ge.py]をダブルクリックしても起動しない。
 Ａ．Linuxの場合パーミッションで実行が許可されてないのかも。もしWindowsの話でPythonをインストールしてなければ動くはずがないのでPythonをインストール。

 Ｑ．「LTsv」ってフォルダは何だったんですか？
 Ａ．[LTsv_gui.py]などGUI配置するモジュールなどが入ってるので勝手に消すと「yonmoji_ge」が動かなくなります。

      LTsv9kantray(tsvtool9)」は「L:Tsv」の読み書きを中心としたモジュール群と漢字入力「kantray」のPythonによる実装です。
      https://github.com/ooblog/LTsv9kantray

 Ｑ．名前変えても内容が同じファイルが大量生産される。
 Ａ．新規ページを初期化する場合は必ず入力欄で[Enter]キーを押してください。
     初期化しないで保存すると他のページをコピーしたことになります。

 Ｑ．HTMLが初期化されない。
 Ａ．[*.tsv]が既に有る場合と新規作成ではなく既存のファイル読み込みになる(分岐とかの処理は行わない)ので一旦削除。

 Ｑ．JSやCSSが更新されない。
 Ａ．HTML以外のファイルは「save」ボタン押した時にに１度だけ作成、つまり上書きをしないので[*.css][*.js][*.xml]は一旦削除してから[*.html]を保存。

 Ｑ．[opensearch.xml]の埋め込みBase64画像ってどうやって作るんだよ。
 Ａ．Linuxなら「# base64 favicon.png」とコマンド入力。WindowsだとLhaplusで作れた気がするけど右クリックの動作がWineからは確認できず。

    Lhaplus - 窓の杜ライブラリ
    http://www.forest.impress.co.jp/library/software/lhaplus/

 Ｑ．五人揃って四天王とかの元ネタ知りたい。
 Ａ．ネットスラングやエスニックジョークの類はURL先を参考。

    四天王 (してんのう)とは【ピクシブ百科事典
    http://dic.pixiv.net/a/%E5%9B%9B%E5%A4%A9%E7%8E%8B

    【製品とは】 | コピペ博物館
    http://copipe.hakubutsukan.net/laugh/entry-237/

 Ｑ．「約四文字」以外のサイトも作れますか？
 Ｑ．[test.tsv]とか他のサイト(リポジトリ)の解説は？
 Ａ．[yakuyon.tsv]以外にも「github.com/ooblog」で作成のページの参考サンプルは付属しますが、「約四文字」以外の解説はコストの都合でカット。
     いずれサンプル数が増えれば「約四文字」以外のサイトも作れる事の証明になるかと。
     ただし「GitHub」での作成に特化してる気がするので複雑なサイト構築には向いてないと思います。


４．   作者について、例えば連絡先。

 更新情報はGitHubなどを確認してください。

  ooblog/yonmoji_ge(GitHub)
  https://github.com/ooblog/yonmoji_ge

 大風呂ダ敷
  http://d.hatena.ne.jp/ooblog/


# Copyright (c) 2016 ooblog
# License: MIT
# https://github.com/ooblog/yonmoji_ge/blob/master/LICENSE


